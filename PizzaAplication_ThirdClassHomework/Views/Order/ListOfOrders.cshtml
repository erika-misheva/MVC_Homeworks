@*@using PizzaAplication.Models.Domain;
@using PizzaAplication.Models.ViewModels;

@model List<OrderDetailsViewModel>

    <ol>
    @for(int i=0; i<@Model.Count; i++)
    {
        <li>@Model.ElementAt(i).PizzaName - @Model.ElementAt(i).UserFullname - @Model.ElementAt(i).Price</li>
    }
</ol>*@

@model List<OrderDetailsViewModel>

    
    <h4>There are @ViewData["NumberOfOrders"] orders made in our app.</h4>
    <h2>@ViewData["Title"]</h2>

    <h4>The first order was made by: @( (@ViewData["FirstUser"] as User).Name )</h4>

    
    @for(int i=0; i<@Model.Count; i++)
    {
       @* <p>The user @Model.ElementAt(i).UserFullname ordered @Model.ElementAt(i).PizzaName</p>
        <p>The price of the order is @Model.ElementAt(i).Price</p>*@
        <p>===========================================================</p>
        <partial name="~/Views/Shared/Partial/OrderDetailsPartial.cshtml" for="@Model[i]"/>

       @* //////////////////////////////////////////////////////////////
        We need to send an object of type OrderDetailsViewModel to the partial view
        That is why we send each object from the list in ach iteration  as a model to the partial view
        //////////////////////////////////////////////////////////*@
    }
